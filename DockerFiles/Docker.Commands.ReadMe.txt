# Commands:
# docker build -f [DockerfileName] -t [ImageName]:[ImageTag] .

# RUN:
#	Interactive
#		docker run -it -p [mapped-port]:[exposed-port] --name [ContainerName] --env-file [EnvironmentFile].env [ImageName]:[ImageTag] powershell
#	Detached
#		docker run -d -p [mapped-port]:[exposed-port] --name [ContainerName] --env-file [EnvironmentFile].env [ImageName]:[ImageTag]
#	Volume map (Detached)
#		docker run -d -p [mapped-port]:[exposed-port] --name [ContainerName] -v C:/TFS/bnaya/POC/Volumes/Web:C:/bnaya/logs --env-file [EnvironmentFile].env [ImageName]:[ImageTag]


# ATTACH:
#	docker exec -it [ContainerName] powershell
#	docker attach [ContainerName]

# browse to: http://localhost:6549/WcfService.svc/web/getdata/?data=123

# no need to
#	docker inspect -f "{{ .NetworkSettings.Networks.nat.IPAddress }}"  [ContainerName]

# Push
# docker tag IMAGE[:TAG] [REGISTRYHOST/][USERNAME/]NAME[:TAG]
# docker login url -u UserName -p Pass
# docker push NAME[:TAG]

# Logs
#	Global Log (powershell)
# docker logs -f --tail 30 --details [docker-name] 
# Get-EventLog -LogName Application -Source Docker -After (Get-Date).AddMinutes(-2) | Sort-Object Time
# Get-EventLog -LogName Application -Source Docker -After (Get-Date).AddMinutes(-2)  | Sort-Object Time | Export-CSV ~/last30minutes.CSV
#	On Container
# docker logs -t --tail 10 [ContainerName]
# docker logs -t --since 10m [ContainerName]

# CHECK IIS
# import-module IISAdministration
# get-website
#  ENABLE DIRECTORY BROWSE
#    Set-WebConfigurationProperty -filter /system.webserver/directorybrowse -name enabled -pspath 'IIS:\\sites\bnaya' -value $true

